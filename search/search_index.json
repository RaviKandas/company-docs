{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Our Documentation","text":"<p>Welcome to our company's central documentation hub. Everything you need to know about working here is organized in this site.</p>"},{"location":"#quick-navigation","title":"Quick Navigation","text":"- :material-book-open-variant: **[Company Handbook](handbook/index.md)**     Our values, policies, and culture  - :material-code-braces: **[Engineering](engineering/index.md)**     Technical docs, setup guides, and standards  - :material-cog: **[Processes](processes/index.md)**     How we work, meet, and make decisions"},{"location":"#getting-started","title":"Getting Started","text":"<p>New to the company? Start here:</p> <ol> <li>Read our Company Values</li> <li>Complete Onboarding</li> <li>Set up your Development Environment</li> <li>Learn How We Work</li> </ol>"},{"location":"#contributing","title":"Contributing","text":"<p>Everyone can contribute to these docs! See our Contributing Guide to learn how.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<ul> <li>Slack: #general, #engineering, #docs</li> <li>GitHub: github.com/yourcompany</li> <li>Internal Tools: [Link to internal dashboard]</li> </ul>"},{"location":"#need-help","title":"Need Help?","text":"<ul> <li>Documentation questions: #docs on Slack</li> <li>Technical issues: #engineering on Slack</li> <li>HR questions: #people-team on Slack</li> </ul> <p>Pro Tip</p> <p>Use the search bar above to quickly find what you're looking for!</p>"},{"location":"engineering/","title":"Engineering Documentation","text":"<p>Welcome to the engineering team's documentation hub. Find everything you need to build, deploy, and maintain our systems.</p>"},{"location":"engineering/#quick-links","title":"Quick Links","text":"<ul> <li>Development Setup - Get your environment ready</li> <li>Deployment Guide - Ship code to production</li> <li>Code Standards - How we write code</li> </ul>"},{"location":"engineering/#our-tech-stack","title":"Our Tech Stack","text":""},{"location":"engineering/#frontend","title":"Frontend","text":"<ul> <li>React / Next.js</li> <li>TypeScript</li> <li>Tailwind CSS</li> <li>Jest / React Testing Library</li> </ul>"},{"location":"engineering/#backend","title":"Backend","text":"<ul> <li>Node.js / Python</li> <li>PostgreSQL / MongoDB</li> <li>Redis</li> <li>REST APIs / GraphQL</li> </ul>"},{"location":"engineering/#infrastructure","title":"Infrastructure","text":"<ul> <li>AWS / GCP</li> <li>Docker / Kubernetes</li> <li>GitHub Actions</li> <li>Terraform</li> </ul>"},{"location":"engineering/#key-repositories","title":"Key Repositories","text":"<ul> <li><code>frontend</code> - Main web application</li> <li><code>api</code> - Backend services</li> <li><code>mobile</code> - Mobile applications</li> <li><code>infrastructure</code> - IaC and configs</li> </ul>"},{"location":"engineering/#development-workflow","title":"Development Workflow","text":"<ol> <li>Pick a task from the sprint board</li> <li>Create a branch from main</li> <li>Write code following our standards</li> <li>Test thoroughly (unit + integration)</li> <li>Open a PR with description</li> <li>Get review from teammate</li> <li>Merge after approval</li> <li>Deploy (automatic or manual)</li> </ol>"},{"location":"engineering/#getting-help","title":"Getting Help","text":"<ul> <li>Code questions: #engineering on Slack</li> <li>Deployment issues: #ops-alerts</li> <li>Architecture decisions: Weekly tech sync</li> <li>Urgent issues: Page on-call engineer</li> </ul>"},{"location":"engineering/#resources","title":"Resources","text":"<ul> <li>Internal API Docs</li> <li>Architecture Diagrams</li> <li>Runbooks</li> <li>Monitoring Dashboard</li> </ul>"},{"location":"engineering/#contributing","title":"Contributing","text":"<p>See something wrong? Missing documentation? Please contribute! - Small fixes: Just open a PR - Large changes: Discuss in #engineering first - Questions: Ask in #engineering-help</p>"},{"location":"engineering/deployment/","title":"Deployment Guide","text":"<p>How to ship code safely and confidently to production.</p>"},{"location":"engineering/deployment/#deployment-overview","title":"Deployment Overview","text":"<p>We use continuous deployment with manual approval gates for production.</p> <pre><code>graph LR\n    A[Local] --&gt; B[PR]\n    B --&gt; C[Main Branch]\n    C --&gt; D[Staging]\n    D --&gt; E[Production]\n</code></pre>"},{"location":"engineering/deployment/#environments","title":"Environments","text":"Environment URL Auto-Deploy Purpose Development dev.app.com On PR Testing features Staging staging.app.com On merge to main Final testing Production app.com Manual approval Live users"},{"location":"engineering/deployment/#deployment-process","title":"Deployment Process","text":""},{"location":"engineering/deployment/#1-pre-deployment-checklist","title":"1. Pre-Deployment Checklist","text":"<p>Before deploying, ensure: - [ ] All tests passing - [ ] Code reviewed and approved - [ ] Database migrations reviewed - [ ] Feature flags configured - [ ] Monitoring alerts set up - [ ] Rollback plan documented</p>"},{"location":"engineering/deployment/#2-deploy-to-staging","title":"2. Deploy to Staging","text":"<p>Automatic on merge to main: <pre><code># Happens automatically via GitHub Actions\n# Monitor at: https://github.com/yourcompany/app/actions\n</code></pre></p> <p>Manual trigger: <pre><code># Trigger staging deployment\n./scripts/deploy.sh staging\n</code></pre></p>"},{"location":"engineering/deployment/#3-staging-validation","title":"3. Staging Validation","text":"<ul> <li> Smoke tests pass</li> <li> Key user flows work</li> <li> Performance metrics normal</li> <li> No errors in logs</li> <li> Database queries optimized</li> </ul>"},{"location":"engineering/deployment/#4-deploy-to-production","title":"4. Deploy to Production","text":""},{"location":"engineering/deployment/#option-a-github-actions-recommended","title":"Option A: GitHub Actions (Recommended)","text":"<ol> <li>Go to Actions tab</li> <li>Click \"Deploy to Production\" workflow</li> <li>Click \"Run workflow\"</li> <li>Select branch (usually main)</li> <li>Confirm deployment</li> </ol>"},{"location":"engineering/deployment/#option-b-command-line","title":"Option B: Command Line","text":"<pre><code># Requires production access\n./scripts/deploy.sh production --confirm\n\n# With specific version\n./scripts/deploy.sh production --version=v1.2.3\n</code></pre>"},{"location":"engineering/deployment/#5-post-deployment","title":"5. Post-Deployment","text":"<p>Immediately after deployment: 1. Monitor dashboards (first 5 minutes critical) 2. Check error rates 3. Verify key metrics 4. Test critical paths 5. Announce in #deployments</p>"},{"location":"engineering/deployment/#rollback-procedure","title":"Rollback Procedure","text":"<p>If something goes wrong:</p>"},{"location":"engineering/deployment/#immediate-rollback-5-minutes","title":"Immediate Rollback (&lt; 5 minutes)","text":"<pre><code># One-command rollback\n./scripts/rollback.sh production\n\n# Or via GitHub Actions\n# Actions \u2192 Rollback Production \u2192 Run workflow\n</code></pre>"},{"location":"engineering/deployment/#manual-rollback","title":"Manual Rollback","text":"<ol> <li>Identify last working version</li> <li>Deploy specific version: <pre><code>./scripts/deploy.sh production --version=&lt;last-good-version&gt;\n</code></pre></li> </ol>"},{"location":"engineering/deployment/#database-migrations","title":"Database Migrations","text":""},{"location":"engineering/deployment/#before-deploying","title":"Before Deploying","text":"<ol> <li>Review migration files</li> <li>Test on staging first</li> <li>Backup production database</li> <li>Plan for rollback</li> </ol>"},{"location":"engineering/deployment/#running-migrations","title":"Running Migrations","text":"<pre><code># Automatic with deployment\n# Or manual:\nkubectl exec -it api-pod -- python manage.py migrate\n\n# Rollback migration\nkubectl exec -it api-pod -- python manage.py migrate app_name &lt;previous_migration&gt;\n</code></pre>"},{"location":"engineering/deployment/#feature-flags","title":"Feature Flags","text":"<p>Use feature flags for risky changes:</p> <pre><code>if (featureFlag('new-feature')) {\n  // New code\n} else {\n  // Old code\n}\n</code></pre> <p>Manage flags at: flags.internal.com</p>"},{"location":"engineering/deployment/#monitoring","title":"Monitoring","text":""},{"location":"engineering/deployment/#key-dashboards","title":"Key Dashboards","text":"<ul> <li>Application Metrics</li> <li>Error Tracking</li> <li>Infrastructure</li> <li>User Analytics</li> </ul>"},{"location":"engineering/deployment/#alert-channels","title":"Alert Channels","text":"<ul> <li>Critical: PagerDuty \u2192 On-call engineer</li> <li>High: #ops-alerts on Slack</li> <li>Medium: #engineering on Slack</li> <li>Low: Daily summary email</li> </ul>"},{"location":"engineering/deployment/#deployment-schedule","title":"Deployment Schedule","text":""},{"location":"engineering/deployment/#regular-deployments","title":"Regular Deployments","text":"<ul> <li>Monday-Thursday: Anytime</li> <li>Friday: Before 2 PM only</li> <li>Weekends: Emergency fixes only</li> </ul>"},{"location":"engineering/deployment/#deployment-freeze","title":"Deployment Freeze","text":"<ul> <li>Major holidays</li> <li>Black Friday/Cyber Monday</li> <li>Company-wide events</li> <li>Announced maintenance windows</li> </ul>"},{"location":"engineering/deployment/#cicd-pipeline","title":"CI/CD Pipeline","text":"<p>Our pipeline stages: 1. Build - Compile code, assets 2. Test - Unit, integration tests 3. Security - Vulnerability scanning 4. Quality - Code coverage, linting 5. Deploy - Ship to environment 6. Verify - Smoke tests</p>"},{"location":"engineering/deployment/#troubleshooting","title":"Troubleshooting","text":""},{"location":"engineering/deployment/#build-failing","title":"Build Failing","text":"<pre><code># Check logs\ngh run view &lt;run-id&gt;\n\n# Re-run specific job\ngh run rerun &lt;run-id&gt; --job=&lt;job-id&gt;\n</code></pre>"},{"location":"engineering/deployment/#deployment-stuck","title":"Deployment Stuck","text":"<pre><code># Check deployment status\nkubectl get deployments -n production\n\n# Check pods\nkubectl get pods -n production\n\n# View logs\nkubectl logs -f deployment/api -n production\n</code></pre>"},{"location":"engineering/deployment/#database-issues","title":"Database Issues","text":"<pre><code># Check connections\nkubectl exec -it api-pod -- python manage.py dbshell\n\n# Check migration status\nkubectl exec -it api-pod -- python manage.py showmigrations\n</code></pre>"},{"location":"engineering/deployment/#security-notes","title":"Security Notes","text":"<ul> <li>Never commit secrets</li> <li>Use environment variables</li> <li>Rotate credentials regularly</li> <li>Audit production access</li> <li>Enable 2FA everywhere</li> </ul>"},{"location":"engineering/deployment/#getting-help","title":"Getting Help","text":"<ul> <li>Deployment issues: #ops-alerts</li> <li>On-call engineer: PagerDuty</li> <li>Non-urgent: #engineering</li> <li>Runbooks: runbooks.internal.com</li> </ul>"},{"location":"engineering/deployment/#deployment-checklist-template","title":"Deployment Checklist Template","text":"<pre><code>## Deployment: [Feature/Fix Name]\n- Version: v1.2.3\n- Date: YYYY-MM-DD\n- Deployer: @username\n\n### Pre-deployment\n- [ ] Tests passing\n- [ ] Code reviewed\n- [ ] Staging tested\n- [ ] Rollback plan ready\n\n### Deployment\n- [ ] Production deployed\n- [ ] Migrations run\n- [ ] Feature flags set\n\n### Post-deployment\n- [ ] Metrics normal\n- [ ] No error spike\n- [ ] Key flows tested\n- [ ] Team notified\n</code></pre> <p>Remember: It's better to delay a deployment than to break production! \ud83d\ude80</p>"},{"location":"engineering/setup/","title":"Development Environment Setup","text":"<p>Get your development environment ready in 30 minutes or less!</p>"},{"location":"engineering/setup/#prerequisites","title":"Prerequisites","text":"<p>Before starting, ensure you have: - [ ] GitHub account with 2FA enabled - [ ] Slack access - [ ] Admin rights on your machine</p>"},{"location":"engineering/setup/#step-1-install-core-tools","title":"Step 1: Install Core Tools","text":""},{"location":"engineering/setup/#macos","title":"macOS","text":"<pre><code># Install Homebrew\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# Install essential tools\nbrew install git node python docker\nbrew install --cask visual-studio-code\n</code></pre>"},{"location":"engineering/setup/#linux-ubuntudebian","title":"Linux (Ubuntu/Debian)","text":"<pre><code># Update package manager\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\n# Install essential tools\nsudo apt install git nodejs npm python3 docker.io\n</code></pre>"},{"location":"engineering/setup/#windows","title":"Windows","text":"<ol> <li>Install WSL2</li> <li>Install Docker Desktop</li> <li>Install Node.js</li> <li>Install Git</li> </ol>"},{"location":"engineering/setup/#step-2-configure-git","title":"Step 2: Configure Git","text":"<pre><code># Set your identity\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@company.com\"\n\n# Set up SSH key\nssh-keygen -t ed25519 -C \"your.email@company.com\"\ncat ~/.ssh/id_ed25519.pub\n# Add this key to GitHub: Settings \u2192 SSH Keys\n</code></pre>"},{"location":"engineering/setup/#step-3-clone-repositories","title":"Step 3: Clone Repositories","text":"<pre><code># Create workspace\nmkdir ~/workspace &amp;&amp; cd ~/workspace\n\n# Clone main repos\ngit clone git@github.com:yourcompany/frontend.git\ngit clone git@github.com:yourcompany/api.git\ngit clone git@github.com:yourcompany/infrastructure.git\n</code></pre>"},{"location":"engineering/setup/#step-4-frontend-setup","title":"Step 4: Frontend Setup","text":"<pre><code>cd ~/workspace/frontend\n\n# Install dependencies\nnpm install\n\n# Copy environment variables\ncp .env.example .env.local\n\n# Start development server\nnpm run dev\n# Visit http://localhost:3000\n</code></pre>"},{"location":"engineering/setup/#step-5-backend-setup","title":"Step 5: Backend Setup","text":"<pre><code>cd ~/workspace/api\n\n# Set up Python virtual environment\npython3 -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n\n# Install dependencies\npip install -r requirements.txt\n\n# Set up database\ndocker-compose up -d postgres\npython manage.py migrate\n\n# Run the server\npython manage.py runserver\n# API available at http://localhost:8000\n</code></pre>"},{"location":"engineering/setup/#step-6-ide-configuration","title":"Step 6: IDE Configuration","text":""},{"location":"engineering/setup/#vs-code-extensions","title":"VS Code Extensions","text":"<p>Install these recommended extensions: - ESLint - Prettier - GitLens - Docker - Python - Code Spell Checker</p>"},{"location":"engineering/setup/#settings","title":"Settings","text":"<pre><code>{\n  \"editor.formatOnSave\": true,\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll.eslint\": true\n  }\n}\n</code></pre>"},{"location":"engineering/setup/#step-7-verify-everything-works","title":"Step 7: Verify Everything Works","text":"<p>Run our verification script: <pre><code>curl -s https://setup.company.com/verify.sh | bash\n</code></pre></p> <p>Or manually check: - [ ] Frontend loads at localhost:3000 - [ ] API responds at localhost:8000/health - [ ] Can commit and push to a test branch - [ ] Docker is running - [ ] All tests pass</p>"},{"location":"engineering/setup/#common-issues","title":"Common Issues","text":""},{"location":"engineering/setup/#port-already-in-use","title":"Port Already in Use","text":"<pre><code># Find what's using the port\nlsof -i :3000  # macOS/Linux\nnetstat -ano | findstr :3000  # Windows\n\n# Kill the process\nkill -9 &lt;PID&gt;\n</code></pre>"},{"location":"engineering/setup/#permission-denied-npm","title":"Permission Denied (npm)","text":"<pre><code># Fix npm permissions\nmkdir ~/.npm-global\nnpm config set prefix '~/.npm-global'\necho 'export PATH=~/.npm-global/bin:$PATH' &gt;&gt; ~/.zshrc\nsource ~/.zshrc\n</code></pre>"},{"location":"engineering/setup/#docker-not-starting","title":"Docker Not Starting","text":"<ol> <li>Ensure virtualization is enabled in BIOS</li> <li>Restart Docker Desktop</li> <li>Check Docker daemon: <code>docker ps</code></li> </ol>"},{"location":"engineering/setup/#additional-setup","title":"Additional Setup","text":""},{"location":"engineering/setup/#database-gui","title":"Database GUI","text":"<ul> <li>TablePlus (recommended)</li> <li>DBeaver (free alternative)</li> </ul>"},{"location":"engineering/setup/#api-testing","title":"API Testing","text":"<ul> <li>Postman</li> <li>Insomnia</li> </ul>"},{"location":"engineering/setup/#monitoring","title":"Monitoring","text":"<ul> <li>Install Datadog Agent (optional)</li> <li>Set up local logging aggregation</li> </ul>"},{"location":"engineering/setup/#next-steps","title":"Next Steps","text":"<p>\u2705 Setup complete! Now you can: 1. Read our Code Standards 2. Check the current sprint 3. Join #engineering-newbies on Slack 4. Schedule 1:1 with your tech lead 5. Start with a \"good first issue\"</p>"},{"location":"engineering/setup/#need-help","title":"Need Help?","text":"<ul> <li>Setup issues: #engineering-help on Slack</li> <li>Missing access: #it-help on Slack</li> <li>Documentation: Update this page via PR!</li> </ul> <p>Happy coding! \ud83d\ude80</p>"},{"location":"engineering/standards/","title":"Code Standards","text":"<p>Consistency makes our codebase maintainable. These are our coding standards and best practices.</p>"},{"location":"engineering/standards/#general-principles","title":"General Principles","text":"<ol> <li>Readability &gt; Cleverness - Code is read more than written</li> <li>Simple &gt; Complex - Choose the simplest solution that works</li> <li>Explicit &gt; Implicit - Be clear about intent</li> <li>Tested &gt; Untested - If it's not tested, it's broken</li> </ol>"},{"location":"engineering/standards/#language-specific-standards","title":"Language-Specific Standards","text":""},{"location":"engineering/standards/#javascripttypescript","title":"JavaScript/TypeScript","text":""},{"location":"engineering/standards/#style-guide","title":"Style Guide","text":"<p>We follow Airbnb JavaScript Style Guide with these modifications:</p> <pre><code>// \u2705 Good: Clear naming\nconst getUserById = async (userId: string) =&gt; {\n  const user = await db.users.findById(userId);\n  return user;\n};\n\n// \u274c Bad: Unclear naming\nconst get = async (id) =&gt; {\n  const u = await db.users.findById(id);\n  return u;\n};\n</code></pre>"},{"location":"engineering/standards/#key-rules","title":"Key Rules","text":"<ul> <li>Use <code>const</code> by default, <code>let</code> when needed, never <code>var</code></li> <li>Prefer async/await over promises</li> <li>Use TypeScript for new code</li> <li>Functional components for React</li> <li>2 spaces for indentation</li> </ul>"},{"location":"engineering/standards/#python","title":"Python","text":"<p>Follow PEP 8 with these additions:</p> <pre><code># \u2705 Good: Clear and typed\ndef calculate_total(items: List[Item]) -&gt; Decimal:\n    \"\"\"Calculate total price for items including tax.\"\"\"\n    subtotal = sum(item.price for item in items)\n    return subtotal * Decimal(\"1.08\")\n\n# \u274c Bad: No types, unclear\ndef calc(i):\n    t = 0\n    for x in i:\n        t += x.price\n    return t * 1.08\n</code></pre>"},{"location":"engineering/standards/#key-rules_1","title":"Key Rules","text":"<ul> <li>Use type hints for function signatures</li> <li>Docstrings for all public functions</li> <li>4 spaces for indentation</li> <li>Max line length: 88 (Black formatter)</li> </ul>"},{"location":"engineering/standards/#code-review-standards","title":"Code Review Standards","text":""},{"location":"engineering/standards/#what-we-look-for","title":"What We Look For","text":""},{"location":"engineering/standards/#must-have","title":"Must Have","text":"<ul> <li> Works - Feature/fix functions correctly</li> <li> Tested - Appropriate test coverage</li> <li> Secure - No security vulnerabilities</li> <li> Performant - No obvious performance issues</li> </ul>"},{"location":"engineering/standards/#should-have","title":"Should Have","text":"<ul> <li> Readable - Clear variable/function names</li> <li> Documented - Complex logic explained</li> <li> Consistent - Follows team patterns</li> <li> Maintainable - Easy to modify later</li> </ul>"},{"location":"engineering/standards/#review-process","title":"Review Process","text":"<ol> <li>Self-review first - Check your own PR</li> <li>Request review from appropriate teammate</li> <li>Address feedback promptly</li> <li>Re-request after changes</li> <li>Merge after approval</li> </ol>"},{"location":"engineering/standards/#giving-feedback","title":"Giving Feedback","text":"<pre><code># Good feedback\n\"Consider extracting this logic into a separate function for reusability.\nHere's an example: [code snippet]\"\n\n# Less helpful\n\"This code is messy.\"\n</code></pre>"},{"location":"engineering/standards/#testing-standards","title":"Testing Standards","text":""},{"location":"engineering/standards/#test-coverage-requirements","title":"Test Coverage Requirements","text":"<ul> <li>New features: 80% minimum</li> <li>Bug fixes: Must include regression test</li> <li>Refactoring: Maintain existing coverage</li> </ul>"},{"location":"engineering/standards/#test-structure","title":"Test Structure","text":"<pre><code>describe('UserService', () =&gt; {\n  describe('createUser', () =&gt; {\n    it('should create a user with valid data', async () =&gt; {\n      // Arrange\n      const userData = { name: 'John', email: 'john@example.com' };\n\n      // Act\n      const user = await UserService.createUser(userData);\n\n      // Assert\n      expect(user.id).toBeDefined();\n      expect(user.name).toBe('John');\n    });\n\n    it('should throw error for invalid email', async () =&gt; {\n      // Test edge cases\n    });\n  });\n});\n</code></pre>"},{"location":"engineering/standards/#git-standards","title":"Git Standards","text":""},{"location":"engineering/standards/#commit-messages","title":"Commit Messages","text":"<p>Follow Conventional Commits:</p> <pre><code># Good commits\nfeat: add user authentication\nfix: resolve memory leak in image processor\ndocs: update API documentation\nrefactor: simplify database connection logic\ntest: add tests for payment service\n\n# Bad commits\nfixed stuff\nWIP\nupdate\nasdf\n</code></pre>"},{"location":"engineering/standards/#branch-naming","title":"Branch Naming","text":"<pre><code>feature/add-user-auth\nfix/memory-leak-images\nchore/update-dependencies\nhotfix/critical-payment-bug\n</code></pre>"},{"location":"engineering/standards/#documentation-standards","title":"Documentation Standards","text":""},{"location":"engineering/standards/#code-comments","title":"Code Comments","text":"<pre><code>// \u2705 Good: Explains WHY\n// We need to retry 3 times because the external API\n// occasionally fails with transient network errors\nconst MAX_RETRIES = 3;\n\n// \u274c Bad: Explains WHAT (obvious from code)\n// Set MAX_RETRIES to 3\nconst MAX_RETRIES = 3;\n</code></pre>"},{"location":"engineering/standards/#function-documentation","title":"Function Documentation","text":"<pre><code>/**\n * Calculates the shipping cost based on weight and destination.\n * \n * @param weight - Package weight in kilograms\n * @param destination - ISO country code\n * @returns Shipping cost in USD\n * @throws {InvalidDestinationError} If destination is not supported\n * \n * @example\n * calculateShipping(2.5, 'US') // Returns 15.99\n */\nfunction calculateShipping(weight: number, destination: string): number {\n  // Implementation\n}\n</code></pre>"},{"location":"engineering/standards/#performance-standards","title":"Performance Standards","text":""},{"location":"engineering/standards/#frontend","title":"Frontend","text":"<ul> <li>Initial load: &lt; 3 seconds</li> <li>Interaction response: &lt; 100ms</li> <li>Lighthouse score: &gt; 90</li> </ul>"},{"location":"engineering/standards/#backend","title":"Backend","text":"<ul> <li>API response: &lt; 200ms (p50)</li> <li>Database queries: &lt; 100ms</li> <li>Background jobs: &lt; 5 minutes</li> </ul>"},{"location":"engineering/standards/#optimization-checklist","title":"Optimization Checklist","text":"<ul> <li> Minimize bundle size</li> <li> Optimize images</li> <li> Cache appropriately</li> <li> Paginate large datasets</li> <li> Index database queries</li> </ul>"},{"location":"engineering/standards/#security-standards","title":"Security Standards","text":""},{"location":"engineering/standards/#never-do-this","title":"Never Do This","text":"<pre><code>// \u274c NEVER commit secrets\nconst apiKey = \"sk_live_abc123def456\";\n\n// \u274c NEVER trust user input\nconst query = `SELECT * FROM users WHERE id = ${req.params.id}`;\n\n// \u274c NEVER disable security features\nprocess.env[\"NODE_TLS_REJECT_UNAUTHORIZED\"] = 0;\n</code></pre>"},{"location":"engineering/standards/#always-do-this","title":"Always Do This","text":"<pre><code>// \u2705 Use environment variables\nconst apiKey = process.env.API_KEY;\n\n// \u2705 Parameterize queries\nconst query = 'SELECT * FROM users WHERE id = $1';\ndb.query(query, [req.params.id]);\n\n// \u2705 Validate input\nconst schema = Joi.object({\n  email: Joi.string().email().required(),\n  age: Joi.number().min(0).max(120)\n});\n</code></pre>"},{"location":"engineering/standards/#accessibility-standards","title":"Accessibility Standards","text":"<ul> <li>All images need alt text</li> <li>Forms need labels</li> <li>Keyboard navigation support</li> <li>ARIA labels where needed</li> <li>Color contrast ratio: 4.5:1 minimum</li> </ul>"},{"location":"engineering/standards/#monitoring-logging","title":"Monitoring &amp; Logging","text":""},{"location":"engineering/standards/#what-to-log","title":"What to Log","text":"<pre><code>// \u2705 Good: Actionable information\nlogger.info('Payment processed', { \n  userId, \n  amount, \n  transactionId \n});\n\n// \u274c Bad: Sensitive information\nlogger.info('User logged in', { \n  email, \n  password // NEVER log passwords!\n});\n</code></pre>"},{"location":"engineering/standards/#error-handling","title":"Error Handling","text":"<pre><code>try {\n  await processPayment(order);\n} catch (error) {\n  // Log error with context\n  logger.error('Payment processing failed', {\n    error: error.message,\n    orderId: order.id,\n    userId: order.userId,\n    stack: error.stack\n  });\n\n  // Handle gracefully\n  throw new PaymentError('Payment could not be processed');\n}\n</code></pre>"},{"location":"engineering/standards/#tools-automation","title":"Tools &amp; Automation","text":""},{"location":"engineering/standards/#linters-formatters","title":"Linters &amp; Formatters","text":"<ul> <li>JavaScript/TS: ESLint + Prettier</li> <li>Python: Black + Pylint</li> <li>CSS: Stylelint</li> <li>Markdown: markdownlint</li> </ul>"},{"location":"engineering/standards/#pre-commit-hooks","title":"Pre-commit Hooks","text":"<pre><code># .pre-commit-config.yaml\n- repo: local\n  hooks:\n    - id: lint\n      name: Lint\n      entry: npm run lint\n    - id: test\n      name: Test\n      entry: npm test\n</code></pre>"},{"location":"engineering/standards/#exceptions","title":"Exceptions","text":"<p>Sometimes we need to break these rules. When you do: 1. Document why in a comment 2. Get team agreement 3. Create a ticket to fix later (if temporary)</p>"},{"location":"engineering/standards/#questions","title":"Questions?","text":"<ul> <li>Standards questions: #engineering on Slack</li> <li>Suggest changes: Open a PR to this doc</li> <li>Architecture decisions: Weekly tech sync</li> </ul> <p>Remember: These standards help us work better together. They're not rules for rules' sake! \ud83c\udfaf</p>"},{"location":"handbook/","title":"Company Handbook","text":"<p>Welcome to our company handbook! This section contains everything about our culture, values, and policies.</p>"},{"location":"handbook/#whats-inside","title":"What's Inside","text":"<ul> <li>Company Values - What we stand for</li> <li>Onboarding - Getting started guide for new team members</li> <li>Time Off Policy - Vacation, sick leave, and holidays</li> </ul>"},{"location":"handbook/#our-mission","title":"Our Mission","text":"<p>To build amazing products that solve real problems for our customers.</p>"},{"location":"handbook/#our-vision","title":"Our Vision","text":"<p>To be the company where talented people do their best work.</p>"},{"location":"handbook/#core-principles","title":"Core Principles","text":"<ol> <li>Customer First - Every decision starts with the customer</li> <li>Transparency - Open communication and honest feedback</li> <li>Excellence - We strive for quality in everything we do</li> <li>Growth - Personal and professional development for all</li> <li>Balance - Work hard, live well</li> </ol>"},{"location":"handbook/#questions","title":"Questions?","text":"<p>Reach out to the People Team on Slack at #people-team.</p>"},{"location":"handbook/onboarding/","title":"Onboarding Guide","text":"<p>Welcome to the team! We're excited to have you here. This guide will help you get up and running in your first week.</p>"},{"location":"handbook/onboarding/#your-first-day","title":"Your First Day","text":""},{"location":"handbook/onboarding/#morning","title":"Morning","text":"<ul> <li> Meet your manager</li> <li> Get your equipment (laptop, monitor, etc.)</li> <li> Set up your accounts (email, Slack, GitHub)</li> <li> Take your profile photo</li> <li> Join team channels on Slack</li> </ul>"},{"location":"handbook/onboarding/#afternoon","title":"Afternoon","text":"<ul> <li> IT setup session</li> <li> Review this documentation</li> <li> Meet your buddy</li> <li> Attend team standup (observer)</li> </ul>"},{"location":"handbook/onboarding/#your-first-week","title":"Your First Week","text":""},{"location":"handbook/onboarding/#day-2-3-getting-oriented","title":"Day 2-3: Getting Oriented","text":"<ul> <li> Complete HR paperwork</li> <li> Security training</li> <li> Read company handbook</li> <li> Set up development environment (engineers)</li> <li> 1:1 with your manager</li> </ul>"},{"location":"handbook/onboarding/#day-4-5-meeting-the-team","title":"Day 4-5: Meeting the Team","text":"<ul> <li> Team introductions</li> <li> Department overview</li> <li> Coffee chats with 3 team members</li> <li> Attend your first team meeting</li> <li> Shadow a colleague</li> </ul>"},{"location":"handbook/onboarding/#week-2-4-ramping-up","title":"Week 2-4: Ramping Up","text":""},{"location":"handbook/onboarding/#week-2","title":"Week 2","text":"<ul> <li>Start on your first small task</li> <li>Daily check-ins with your buddy</li> <li>Attend all team meetings</li> <li>Complete any role-specific training</li> </ul>"},{"location":"handbook/onboarding/#week-3-4","title":"Week 3-4","text":"<ul> <li>Take on your first independent project</li> <li>Present yourself to the team</li> <li>Provide feedback on onboarding process</li> <li>30-day check-in with manager</li> </ul>"},{"location":"handbook/onboarding/#key-resources","title":"Key Resources","text":""},{"location":"handbook/onboarding/#communication","title":"Communication","text":"<ul> <li>Slack: Primary communication tool</li> <li> </li> <li> </li> <li> </li> </ul>"},{"location":"handbook/onboarding/#general-company-announcements","title":"general - Company announcements","text":""},{"location":"handbook/onboarding/#random-fun-stuff","title":"random - Fun stuff","text":""},{"location":"handbook/onboarding/#help-get-help-with-anything","title":"help - Get help with anything","text":""},{"location":"handbook/onboarding/#tools-access","title":"Tools &amp; Access","text":"<ul> <li>GitHub: Code repository</li> <li>Google Workspace: Email, docs, calendar</li> <li>1Password: Password manager</li> <li>Notion/Jira: Project management</li> </ul>"},{"location":"handbook/onboarding/#important-people","title":"Important People","text":"<ul> <li>Your Manager: Your go-to for everything</li> <li>Your Buddy: Informal questions and support</li> <li>IT Team: Technical issues (#it-help)</li> <li>People Team: HR questions (#people-team)</li> </ul>"},{"location":"handbook/onboarding/#your-onboarding-buddy","title":"Your Onboarding Buddy","text":"<p>You'll be paired with a buddy who will: - Answer your \"silly\" questions (there are none!) - Show you the ropes - Introduce you to people - Have coffee/lunch with you</p>"},{"location":"handbook/onboarding/#tips-for-success","title":"Tips for Success","text":"<ol> <li>Ask Questions: No question is too small</li> <li>Take Notes: You'll get a lot of information</li> <li>Be Patient: It takes time to learn everything</li> <li>Connect: Schedule 1:1s with teammates</li> <li>Feedback: Tell us how we can improve onboarding</li> </ol>"},{"location":"handbook/onboarding/#30-60-90-day-expectations","title":"30-60-90 Day Expectations","text":""},{"location":"handbook/onboarding/#30-days","title":"30 Days","text":"<ul> <li>Understand team structure and goals</li> <li>Complete all onboarding tasks</li> <li>Start contributing to team projects</li> </ul>"},{"location":"handbook/onboarding/#60-days","title":"60 Days","text":"<ul> <li>Working independently on tasks</li> <li>Building relationships across teams</li> <li>Understanding company products deeply</li> </ul>"},{"location":"handbook/onboarding/#90-days","title":"90 Days","text":"<ul> <li>Fully productive team member</li> <li>Contributing to team discussions</li> <li>Identifying improvement opportunities</li> </ul>"},{"location":"handbook/onboarding/#need-help","title":"Need Help?","text":"<ul> <li>Urgent: Message your manager</li> <li>General: Post in #help on Slack</li> <li>IT Issues: #it-help on Slack</li> <li>HR Questions: #people-team on Slack</li> </ul> <p>Welcome aboard! We're thrilled to have you on the team! \ud83c\udf89</p>"},{"location":"handbook/time-off/","title":"Time Off Policy","text":"<p>We believe in work-life balance. Well-rested team members do their best work.</p>"},{"location":"handbook/time-off/#unlimited-pto","title":"Unlimited PTO","text":"<p>We offer unlimited paid time off with these guidelines:</p>"},{"location":"handbook/time-off/#minimum-time-off","title":"Minimum Time Off","text":"<ul> <li>Required minimum: 2 weeks per year</li> <li>Recommended: 3-4 weeks per year</li> <li>We'll remind you if you haven't taken enough time off!</li> </ul>"},{"location":"handbook/time-off/#how-to-request-time-off","title":"How to Request Time Off","text":"<ol> <li>Check team calendar for conflicts</li> <li>Discuss with your manager (as early as possible)</li> <li>Submit request in HR system</li> <li>Update your calendar once approved</li> <li>Set up coverage for your responsibilities</li> <li>Set OOO messages before you leave</li> </ol>"},{"location":"handbook/time-off/#guidelines","title":"Guidelines","text":""},{"location":"handbook/time-off/#short-breaks-1-3-days","title":"Short Breaks (1-3 days)","text":"<ul> <li>Notify manager 1 week in advance</li> <li>Ensure urgent tasks are covered</li> </ul>"},{"location":"handbook/time-off/#longer-breaks-1-week","title":"Longer Breaks (1 week+)","text":"<ul> <li>Notify manager 2-4 weeks in advance</li> <li>Create handover documentation</li> <li>Designate a backup person</li> </ul>"},{"location":"handbook/time-off/#extended-leave-2-weeks","title":"Extended Leave (2+ weeks)","text":"<ul> <li>Discuss with manager 1-2 months ahead</li> <li>Detailed transition plan required</li> <li>Consider team/project timelines</li> </ul>"},{"location":"handbook/time-off/#holidays","title":"Holidays","text":""},{"location":"handbook/time-off/#company-holidays","title":"Company Holidays","text":"<p>We observe these holidays (office closed): - New Year's Day - MLK Day - Presidents Day - Memorial Day - Independence Day - Labor Day - Thanksgiving (2 days) - Winter Break (Dec 24 - Jan 1)</p>"},{"location":"handbook/time-off/#flexible-holidays","title":"Flexible Holidays","text":"<p>Take 2 additional floating holidays for personal/religious observances.</p>"},{"location":"handbook/time-off/#sick-leave","title":"Sick Leave","text":"<p>Your health comes first. If you're sick:</p> <ol> <li>Stay home (or log off if remote)</li> <li>Notify your manager as soon as possible</li> <li>Rest and recover - no need to work from bed!</li> <li>No documentation needed for 1-3 days</li> <li>Doctor's note optional for extended illness</li> </ol>"},{"location":"handbook/time-off/#mental-health-days","title":"Mental Health Days","text":"<p>Mental health is health. Use sick days for mental health needs without stigma.</p>"},{"location":"handbook/time-off/#other-leave-types","title":"Other Leave Types","text":""},{"location":"handbook/time-off/#parental-leave","title":"Parental Leave","text":"<ul> <li>12 weeks fully paid for all new parents</li> <li>Additional 4 weeks at 50% pay if desired</li> <li>Flexible return options</li> </ul>"},{"location":"handbook/time-off/#bereavement-leave","title":"Bereavement Leave","text":"<ul> <li>5 days for immediate family</li> <li>3 days for extended family</li> <li>Additional time available if needed</li> </ul>"},{"location":"handbook/time-off/#jury-duty","title":"Jury Duty","text":"<ul> <li>Fully paid</li> <li>No PTO deduction</li> <li>Notify manager when summoned</li> </ul>"},{"location":"handbook/time-off/#sabbatical","title":"Sabbatical","text":"<p>After 5 years, eligible for 4-week paid sabbatical</p>"},{"location":"handbook/time-off/#best-practices","title":"Best Practices","text":""},{"location":"handbook/time-off/#before-you-leave","title":"Before You Leave","text":"<ul> <li>\u2705 Handover critical tasks</li> <li>\u2705 Update project status</li> <li>\u2705 Set OOO messages (email, Slack)</li> <li>\u2705 Share emergency contact (for 1+ week)</li> </ul>"},{"location":"handbook/time-off/#while-youre-out","title":"While You're Out","text":"<ul> <li>\ud83d\udeab No checking email/Slack</li> <li>\ud83d\udeab No \"quick calls\"</li> <li>\u2705 Actually disconnect!</li> <li>\u2705 Trust your team</li> </ul>"},{"location":"handbook/time-off/#when-you-return","title":"When You Return","text":"<ul> <li>Check in with manager</li> <li>Review what you missed</li> <li>Ease back in (no 50 meetings day 1!)</li> </ul>"},{"location":"handbook/time-off/#faqs","title":"FAQs","text":"<p>Q: Can unused PTO be paid out? A: No, because it's unlimited! Take your time off.</p> <p>Q: What if my request is denied? A: Rare, but discuss alternatives with your manager.</p> <p>Q: Can I work while on PTO? A: Please don't! Time off means time OFF.</p> <p>Q: What about time zones when traveling? A: Communicate your availability clearly if working remotely while traveling.</p>"},{"location":"handbook/time-off/#questions","title":"Questions?","text":"<p>Contact People Team at #people-team on Slack or email hr@company.com</p>"},{"location":"handbook/values/","title":"Company Values","text":"<p>Our values guide everything we do. They're not just words on a wall - they're how we work every day.</p>"},{"location":"handbook/values/#1-customer-obsession","title":"1. Customer Obsession","text":"<p>We start with the customer and work backwards. Every feature, every decision, every line of code should make our customers' lives better.</p> <p>In Practice: - Regular customer interviews - Data-driven decision making - Quick response to customer feedback - Celebrating customer success stories</p>"},{"location":"handbook/values/#2-radical-transparency","title":"2. Radical Transparency","text":"<p>We believe in open communication, honest feedback, and sharing information broadly.</p> <p>In Practice: - All-hands meetings with Q&amp;A - Open salary bands - Transparent roadmaps - Direct feedback culture</p>"},{"location":"handbook/values/#3-ownership-mentality","title":"3. Ownership Mentality","text":"<p>We act like owners, not renters. We take responsibility and think long-term.</p> <p>In Practice: - Autonomy in decision making - Taking initiative without being asked - Learning from failures - Thinking beyond your immediate scope</p>"},{"location":"handbook/values/#4-continuous-learning","title":"4. Continuous Learning","text":"<p>We're always students. The moment we stop learning is the moment we stop growing.</p> <p>In Practice: - Learning budget for everyone - Internal knowledge sharing - Experimentation and iteration - Celebrating lessons from failures</p>"},{"location":"handbook/values/#5-work-life-harmony","title":"5. Work-Life Harmony","text":"<p>Great work comes from healthy, happy people. We work hard and live well.</p> <p>In Practice: - Flexible working hours - Unlimited PTO (with minimums!) - Mental health support - No emails after 6pm or weekends</p>"},{"location":"handbook/values/#living-our-values","title":"Living Our Values","text":"<p>These values aren't just guidelines - they're commitments. We hire, promote, and recognize based on how well people embody these values.</p> <p>Have feedback on our values? Share it in #culture on Slack!</p>"},{"location":"processes/","title":"How We Work","text":"<p>This section documents our processes, workflows, and ways of working together effectively.</p>"},{"location":"processes/#core-processes","title":"Core Processes","text":"<ul> <li>Meeting Guidelines - How to run effective meetings</li> <li>Decision Making - How we make and document decisions</li> <li>Contributing to Docs - How to update this documentation</li> </ul>"},{"location":"processes/#our-work-philosophy","title":"Our Work Philosophy","text":""},{"location":"processes/#principles","title":"Principles","text":"<ol> <li>Async First - Default to asynchronous communication</li> <li>Document Everything - If it's not written down, it didn't happen</li> <li>Iterate Quickly - Ship small, ship often</li> <li>Feedback Culture - Give and receive feedback regularly</li> <li>Trust by Default - Assume positive intent</li> </ol>"},{"location":"processes/#communication","title":"Communication","text":""},{"location":"processes/#channels","title":"Channels","text":"Type Tool When to Use Urgent Phone/Slack DM Needs response &lt; 1 hour Quick Question Slack Needs response same day Discussion Slack Thread Collaborative conversation Updates Email/Notion FYI, no response needed Deep Work Do Not Disturb Focus time, no interruptions"},{"location":"processes/#response-times","title":"Response Times","text":"<ul> <li>Slack: Within 4 hours during work hours</li> <li>Email: Within 24 hours</li> <li>PR Reviews: Within 1 business day</li> <li>Meeting Invites: Accept/decline within 24 hours</li> </ul>"},{"location":"processes/#work-schedule","title":"Work Schedule","text":""},{"location":"processes/#core-hours","title":"Core Hours","text":"<ul> <li>10am - 3pm (your timezone) - Available for meetings</li> <li>Outside core hours - Flexible, async work</li> </ul>"},{"location":"processes/#focus-time","title":"Focus Time","text":"<ul> <li>Block calendar for deep work</li> <li>Set Slack status to \"Focus\"</li> <li>No meetings Wednesday afternoons</li> </ul>"},{"location":"processes/#project-management","title":"Project Management","text":""},{"location":"processes/#how-we-plan","title":"How We Plan","text":"<ol> <li>Quarterly - OKRs and roadmap</li> <li>Monthly - Review and adjust</li> <li>Bi-weekly - Sprint planning</li> <li>Daily - Standups (async or sync)</li> </ol>"},{"location":"processes/#how-we-track","title":"How We Track","text":"<ul> <li>Tasks: Jira/Linear/Notion</li> <li>Docs: This repository</li> <li>Code: GitHub</li> <li>Designs: Figma</li> </ul>"},{"location":"processes/#team-rituals","title":"Team Rituals","text":""},{"location":"processes/#regular-meetings","title":"Regular Meetings","text":"<ul> <li>Monday: Week kickoff (30 min)</li> <li>Wednesday: Team sync (45 min)</li> <li>Friday: Demo day (1 hour)</li> </ul>"},{"location":"processes/#quarterly-events","title":"Quarterly Events","text":"<ul> <li>Planning: 2-day offsite</li> <li>Retrospective: What worked, what didn't</li> <li>Celebration: Recognize achievements</li> </ul>"},{"location":"processes/#decision-making","title":"Decision Making","text":"<p>We use different approaches based on impact:</p> Impact Who Decides Process Low Individual Just do it Medium Team Lead Consult team, then decide High Team Discuss and consensus Critical Leadership RFC process required"},{"location":"processes/#feedback-reviews","title":"Feedback &amp; Reviews","text":""},{"location":"processes/#continuous-feedback","title":"Continuous Feedback","text":"<ul> <li>Regular 1:1s with manager</li> <li>Peer feedback in PRs</li> <li>Team retrospectives</li> </ul>"},{"location":"processes/#formal-reviews","title":"Formal Reviews","text":"<ul> <li>Quarterly check-ins</li> <li>Annual performance review</li> <li>360 feedback process</li> </ul>"},{"location":"processes/#remote-work","title":"Remote Work","text":""},{"location":"processes/#best-practices","title":"Best Practices","text":"<ul> <li>Camera on for important meetings</li> <li>Mute when not speaking</li> <li>Document meeting outcomes</li> <li>Record for those who can't attend</li> <li>Time zones - be mindful</li> </ul>"},{"location":"processes/#tools","title":"Tools","text":"<ul> <li>Video: Zoom/Google Meet</li> <li>Whiteboard: Miro/FigJam</li> <li>Async Video: Loom</li> <li>Virtual Office: Gather/Discord</li> </ul>"},{"location":"processes/#onboarding-new-team-members","title":"Onboarding New Team Members","text":"<ol> <li>Assign a buddy</li> <li>Create onboarding checklist</li> <li>Schedule intro meetings</li> <li>Share documentation</li> <li>First project within week 1</li> <li>30-day check-in</li> </ol>"},{"location":"processes/#continuous-improvement","title":"Continuous Improvement","text":""},{"location":"processes/#how-we-improve","title":"How We Improve","text":"<ul> <li>Weekly team retrospectives</li> <li>Monthly process reviews</li> <li>Quarterly surveys</li> <li>Annual planning</li> </ul>"},{"location":"processes/#suggesting-changes","title":"Suggesting Changes","text":"<ol> <li>Discuss in team meeting</li> <li>Document proposal</li> <li>Trial for 2 weeks</li> <li>Evaluate and decide</li> <li>Update documentation</li> </ol>"},{"location":"processes/#resources","title":"Resources","text":"<ul> <li>Meeting Templates</li> <li>Project Templates</li> <li>Slack Guidelines</li> <li>Remote Work Guide</li> </ul>"},{"location":"processes/#questions","title":"Questions?","text":"<ul> <li>Process questions: #operations on Slack</li> <li>Suggestions: #process-improvements</li> <li>Urgent: Contact your manager</li> </ul> <p>Remember: These processes serve us, not the other way around. If something isn't working, let's fix it! \ud83d\udd27</p>"},{"location":"processes/contributing/","title":"Contributing to Documentation","text":"<p>Everyone can and should contribute to our documentation! Here's how.</p>"},{"location":"processes/contributing/#why-contribute","title":"Why Contribute?","text":"<ul> <li>Share knowledge - Help others learn</li> <li>Save time - Document it once, reference forever</li> <li>Reduce confusion - Clear docs = fewer questions</li> <li>Onboard faster - New folks get up to speed quickly</li> <li>Build culture - Docs reflect how we work</li> </ul>"},{"location":"processes/contributing/#quick-start","title":"Quick Start","text":""},{"location":"processes/contributing/#fixing-a-typo-2-minutes","title":"Fixing a Typo (2 minutes)","text":"<ol> <li>Click \"Edit\" on any page</li> <li>Make your change</li> <li>Submit PR with description</li> <li>Merge after approval</li> </ol>"},{"location":"processes/contributing/#adding-new-content-10-minutes","title":"Adding New Content (10 minutes)","text":"<ol> <li>Create new <code>.md</code> file in appropriate folder</li> <li>Write in Markdown</li> <li>Update navigation in <code>mkdocs.yml</code></li> <li>Submit PR</li> <li>Preview deploy and merge</li> </ol>"},{"location":"processes/contributing/#what-to-document","title":"What to Document","text":""},{"location":"processes/contributing/#always-document","title":"Always Document","text":"<ul> <li>\u2705 Decisions - Why we chose X over Y</li> <li>\u2705 Processes - How we do things</li> <li>\u2705 Onboarding - What new people need</li> <li>\u2705 Troubleshooting - Common problems &amp; solutions</li> <li>\u2705 Architecture - How systems work</li> <li>\u2705 APIs - How to integrate</li> </ul>"},{"location":"processes/contributing/#dont-document","title":"Don't Document","text":"<ul> <li>\u274c Sensitive data - Passwords, keys, PII</li> <li>\u274c Temporary info - Use Slack instead</li> <li>\u274c Personal opinions - Keep it factual</li> <li>\u274c External docs - Link, don't copy</li> <li>\u274c Work in progress - Wait until stable</li> </ul>"},{"location":"processes/contributing/#how-to-contribute","title":"How to Contribute","text":""},{"location":"processes/contributing/#method-1-github-web-ui-easy","title":"Method 1: GitHub Web UI (Easy)","text":"<ol> <li>Navigate to file on GitHub</li> <li>Click pencil icon to edit</li> <li>Make changes in browser</li> <li>Write commit message</li> <li>Create pull request</li> </ol>"},{"location":"processes/contributing/#method-2-local-development","title":"Method 2: Local Development","text":"<pre><code># Clone repo\ngit clone git@github.com:yourcompany/docs.git\ncd docs\n\n# Create branch\ngit checkout -b update-deployment-docs\n\n# Make changes\ncode docs/engineering/deployment.md\n\n# Preview locally\npip install mkdocs-material\nmkdocs serve\n# View at http://localhost:8000\n\n# Commit and push\ngit add .\ngit commit -m \"docs: update deployment guide\"\ngit push origin update-deployment-docs\n\n# Create PR on GitHub\n</code></pre>"},{"location":"processes/contributing/#writing-style-guide","title":"Writing Style Guide","text":""},{"location":"processes/contributing/#principles","title":"Principles","text":"<ol> <li>Clear over clever - Simple language</li> <li>Practical over theoretical - Real examples</li> <li>Scannable - Headers, bullets, tables</li> <li>Inclusive - Welcoming to all</li> <li>Up-to-date - Regular reviews</li> </ol>"},{"location":"processes/contributing/#voice-tone","title":"Voice &amp; Tone","text":"<ul> <li>Friendly but professional</li> <li>Direct but not blunt</li> <li>Helpful but not condescending</li> <li>Confident but not arrogant</li> </ul>"},{"location":"processes/contributing/#structure","title":"Structure","text":"<pre><code># Clear Title\n\nBrief introduction paragraph explaining what and why.\n\n## Main Section\n\n### Subsection\n\nContent with:\n- Bullet points for lists\n- **Bold** for emphasis\n- `code` for technical terms\n\n## Examples\n\nShow real examples people can use.\n\n## Next Steps\n\nWhat should reader do next?\n</code></pre>"},{"location":"processes/contributing/#formatting-guidelines","title":"Formatting Guidelines","text":""},{"location":"processes/contributing/#headers","title":"Headers","text":"<pre><code># H1 - Page title only\n## H2 - Major sections\n### H3 - Subsections\n#### H4 - Rarely needed\n</code></pre>"},{"location":"processes/contributing/#lists","title":"Lists","text":"<pre><code>Unordered:\n- Item one\n- Item two\n  - Nested item\n\nOrdered:\n1. First step\n2. Second step\n3. Third step\n</code></pre>"},{"location":"processes/contributing/#code-blocks","title":"Code Blocks","text":"<pre><code>```javascript\n// Use syntax highlighting\nconst example = \"Always include language\";\n```\n</code></pre>"},{"location":"processes/contributing/#tables","title":"Tables","text":"<pre><code>| Column 1 | Column 2 | Column 3 |\n|----------|----------|----------|\n| Data | Data | Data |\n</code></pre>"},{"location":"processes/contributing/#admonitions","title":"Admonitions","text":"<pre><code>!!! note\n    Important information\n\n!!! warning\n    Be careful about this\n\n!!! tip\n    Helpful suggestion\n</code></pre>"},{"location":"processes/contributing/#writing-tips","title":"Writing Tips","text":""},{"location":"processes/contributing/#dos","title":"Do's \u2705","text":"<ul> <li>Use present tense</li> <li>Write short sentences</li> <li>Include examples</li> <li>Add visuals when helpful</li> <li>Link to related docs</li> <li>Test your instructions</li> </ul>"},{"location":"processes/contributing/#donts","title":"Don'ts \u274c","text":"<ul> <li>Don't assume knowledge</li> <li>Don't use jargon without explaining</li> <li>Don't duplicate existing docs</li> <li>Don't write walls of text</li> <li>Don't forget to proofread</li> </ul>"},{"location":"processes/contributing/#pull-request-process","title":"Pull Request Process","text":""},{"location":"processes/contributing/#before-submitting","title":"Before Submitting","text":"<ul> <li> Spell check - No typos</li> <li> Preview locally - Looks good</li> <li> Links work - Test all links</li> <li> Makes sense - Would a new person understand?</li> <li> Adds value - Improves on what exists</li> </ul>"},{"location":"processes/contributing/#pr-template","title":"PR Template","text":"<pre><code>## What Changed\nBrief description of changes\n\n## Why\nProblem this solves or value it adds\n\n## Type of Change\n- [ ] Fix typo\n- [ ] Add new documentation\n- [ ] Update existing docs\n- [ ] Restructure/reorganize\n\n## Checklist\n- [ ] Previewed locally\n- [ ] Links tested\n- [ ] Spell checked\n- [ ] Updated navigation if needed\n</code></pre>"},{"location":"processes/contributing/#review-process","title":"Review Process","text":"<ol> <li>Auto-checks run (links, spelling)</li> <li>Preview deployment created</li> <li>Reviewer assigned (usually automatic)</li> <li>Feedback addressed if any</li> <li>Merged to main</li> <li>Auto-deployed to site</li> </ol>"},{"location":"processes/contributing/#maintenance","title":"Maintenance","text":""},{"location":"processes/contributing/#regular-reviews","title":"Regular Reviews","text":"<ul> <li>Monthly: Check for outdated info</li> <li>Quarterly: Review structure</li> <li>Yearly: Major reorganization</li> </ul>"},{"location":"processes/contributing/#outdated-content","title":"Outdated Content","text":"<p>Found something outdated?</p> <ol> <li>Quick fix: Update it yourself</li> <li>Need help: Create an issue</li> <li>Not sure: Ask in #docs</li> </ol>"},{"location":"processes/contributing/#broken-links","title":"Broken Links","text":"<ul> <li>Check weekly with automated tools</li> <li>Fix immediately when found</li> <li>Update or remove dead links</li> </ul>"},{"location":"processes/contributing/#documentation-standards","title":"Documentation Standards","text":""},{"location":"processes/contributing/#file-naming","title":"File Naming","text":"<pre><code>use-kebab-case.md\nnot fileName_2.md\n</code></pre>"},{"location":"processes/contributing/#front-matter-optional","title":"Front Matter (Optional)","text":"<pre><code>---\ntitle: Page Title\ndescription: Brief description\ntags: [tag1, tag2]\n---\n</code></pre>"},{"location":"processes/contributing/#images","title":"Images","text":"<p><pre><code>![Alt text](../images/filename.png)\n</code></pre> - Use descriptive alt text - Optimize image size - Prefer SVG for diagrams</p>"},{"location":"processes/contributing/#common-patterns","title":"Common Patterns","text":""},{"location":"processes/contributing/#how-to-guide","title":"How-To Guide","text":"<pre><code># How to [Task]\n\n## Prerequisites\nWhat you need before starting\n\n## Steps\n1. First step\n2. Second step\n3. Third step\n\n## Verification\nHow to know it worked\n\n## Troubleshooting\nCommon issues and fixes\n</code></pre>"},{"location":"processes/contributing/#reference-doc","title":"Reference Doc","text":"<pre><code># [Feature] Reference\n\n## Overview\nWhat this is\n\n## Configuration\nAvailable options\n\n## Examples\nCommon use cases\n\n## API\nDetailed specifications\n</code></pre>"},{"location":"processes/contributing/#explanation","title":"Explanation","text":"<pre><code># Understanding [Concept]\n\n## What is it?\nDefinition and purpose\n\n## Why use it?\nBenefits and use cases\n\n## How it works\nTechnical explanation\n\n## Best practices\nRecommended approaches\n</code></pre>"},{"location":"processes/contributing/#getting-help","title":"Getting Help","text":""},{"location":"processes/contributing/#questions","title":"Questions?","text":"<ul> <li>Content: Ask in #docs</li> <li>Technical: Ask in #engineering</li> <li>Process: Ask in #operations</li> </ul>"},{"location":"processes/contributing/#learning-resources","title":"Learning Resources","text":"<ul> <li>Markdown Guide</li> <li>MkDocs Documentation</li> <li>Technical Writing Course</li> </ul>"},{"location":"processes/contributing/#recognition","title":"Recognition","text":"<p>We appreciate documentation contributions! </p> <ul> <li>Monthly shoutouts for contributors</li> <li>Documentation champion award</li> <li>It counts in performance reviews</li> </ul>"},{"location":"processes/contributing/#quick-wins","title":"Quick Wins","text":"<p>Want to contribute but not sure where? Try these:</p> <ol> <li>Fix a typo you noticed</li> <li>Add an example to existing docs</li> <li>Update screenshots that are outdated</li> <li>Improve unclear explanations</li> <li>Document something you just learned</li> </ol>"},{"location":"processes/contributing/#remember","title":"Remember","text":"<p>\"The best documentation is the one that exists.\"</p> <p>Perfect is the enemy of good. Your contribution doesn't have to be perfect - others can help improve it. The important thing is to share knowledge!</p> <p>Start small, contribute often, and help us build amazing documentation together! \ud83d\udcdd</p>"},{"location":"processes/decisions/","title":"Decision Making Process","text":"<p>How we make decisions efficiently and transparently.</p>"},{"location":"processes/decisions/#decision-framework","title":"Decision Framework","text":"<p>We use different decision-making approaches based on the impact and reversibility of the decision.</p>"},{"location":"processes/decisions/#decision-types","title":"Decision Types","text":"Type Impact Reversibility Process Timeframe Type 1 High Hard to reverse RFC + Consensus 1-2 weeks Type 2 Medium Reversible Team discussion 2-3 days Type 3 Low Easy to reverse Individual decides Immediate"},{"location":"processes/decisions/#decision-principles","title":"Decision Principles","text":"<ol> <li>Bias for action - Most decisions are reversible</li> <li>Data-informed - Use data, but don't be paralyzed by it</li> <li>Disagree and commit - Once decided, everyone supports</li> <li>Document everything - Future us needs context</li> <li>Time-bound - Every decision has a deadline</li> </ol>"},{"location":"processes/decisions/#type-1-major-decisions-rfc-process","title":"Type 1: Major Decisions (RFC Process)","text":"<p>For architectural changes, major features, or strategic shifts.</p>"},{"location":"processes/decisions/#rfc-request-for-comments-template","title":"RFC (Request for Comments) Template","text":"<pre><code># RFC: [Title]\n\n## Status\nDraft | In Review | Decided | Implemented\n\n## Summary\nOne paragraph explaining the proposal\n\n## Motivation\nWhy are we doing this? What problem does it solve?\n\n## Detailed Design\nThe meat of the proposal. Include:\n- Technical approach\n- Implementation plan\n- Migration strategy\n- API changes\n\n## Alternatives Considered\nWhat other options were evaluated?\nWhy weren't they chosen?\n\n## Risks &amp; Mitigations\nWhat could go wrong?\nHow do we handle it?\n\n## Success Metrics\nHow do we know this worked?\n\n## Timeline\nKey milestones and dates\n\n## Open Questions\nWhat still needs to be figured out?\n\n## Decision\n[To be filled after decision]\n- Date: \n- Participants:\n- Outcome:\n- Rationale:\n</code></pre>"},{"location":"processes/decisions/#rfc-process","title":"RFC Process","text":"<ol> <li>Draft (Author)</li> <li>Write RFC using template</li> <li>Share in #rfcs channel</li> <li> <p>Tag relevant stakeholders</p> </li> <li> <p>Review (1 week)</p> </li> <li>Gather feedback</li> <li>Update based on input</li> <li> <p>Address concerns</p> </li> <li> <p>Decision Meeting</p> </li> <li>Present final RFC</li> <li>Discuss remaining concerns</li> <li> <p>Make decision</p> </li> <li> <p>Document</p> </li> <li>Update RFC with decision</li> <li>Communicate broadly</li> <li>Create implementation tickets</li> </ol>"},{"location":"processes/decisions/#type-2-team-decisions","title":"Type 2: Team Decisions","text":"<p>For feature priorities, tool choices, or process changes.</p>"},{"location":"processes/decisions/#quick-decision-template","title":"Quick Decision Template","text":"<pre><code># Decision: [What we're deciding]\n\n## Context\nBrief background (2-3 sentences)\n\n## Options\n1. Option A: [pros/cons]\n2. Option B: [pros/cons]\n3. Option C: [pros/cons]\n\n## Recommendation\nWhich option and why\n\n## Decision\n- Chosen: Option X\n- Decided by: @names\n- Date: YYYY-MM-DD\n</code></pre>"},{"location":"processes/decisions/#process","title":"Process","text":"<ol> <li>Propose in Slack/meeting</li> <li>Discuss for 24-48 hours</li> <li>Decide with team consensus</li> <li>Document in decisions log</li> </ol>"},{"location":"processes/decisions/#type-3-individual-decisions","title":"Type 3: Individual Decisions","text":"<p>For implementation details, minor improvements, or daily choices.</p>"},{"location":"processes/decisions/#guidelines","title":"Guidelines","text":"<ul> <li>Just do it - You have autonomy</li> <li>Inform if needed - Let team know FYI</li> <li>Document if novel - Help others learn</li> <li>Escalate if unsure - When in doubt, ask</li> </ul>"},{"location":"processes/decisions/#decision-making-methods","title":"Decision Making Methods","text":""},{"location":"processes/decisions/#1-consensus","title":"1. Consensus","text":"<p>Everyone agrees (or can live with it) - Use for: Critical, long-term decisions - Pros: Full buy-in - Cons: Slow, can lead to compromise</p>"},{"location":"processes/decisions/#2-consent","title":"2. Consent","text":"<p>No one objects strongly - Use for: Most team decisions - Pros: Faster than consensus - Cons: May lack enthusiasm</p>"},{"location":"processes/decisions/#3-consultative","title":"3. Consultative","text":"<p>Decision maker gets input, then decides - Use for: Time-sensitive decisions - Pros: Fast, clear ownership - Cons: Less buy-in</p>"},{"location":"processes/decisions/#4-delegation","title":"4. Delegation","text":"<p>Empower someone to decide - Use for: Domain-specific decisions - Pros: Leverages expertise - Cons: Requires trust</p>"},{"location":"processes/decisions/#daci-framework","title":"DACI Framework","text":"<p>For complex decisions with multiple stakeholders:</p> <ul> <li>Driver: Who's driving this decision?</li> <li>Approver: Who has final say?</li> <li>Contributors: Who provides input?</li> <li>Informed: Who needs to know?</li> </ul>"},{"location":"processes/decisions/#daci-example","title":"DACI Example","text":"<pre><code>Decision: Migrate to new CI/CD platform\n\nDriver: @jane (DevOps Lead)\nApprover: @john (CTO)\nContributors: @engineering-team\nInformed: @all-hands\n</code></pre>"},{"location":"processes/decisions/#decision-velocity","title":"Decision Velocity","text":""},{"location":"processes/decisions/#speeding-up-decisions","title":"Speeding Up Decisions","text":"<ol> <li>Set deadlines - \"We decide by Friday\"</li> <li>Default to reversible - Try it for 2 weeks</li> <li>Smaller groups - 3-5 people max</li> <li>Async first - Document, comment, decide</li> <li>Bias for action - 70% confidence is enough</li> </ol>"},{"location":"processes/decisions/#when-to-slow-down","title":"When to Slow Down","text":"<ul> <li>Irreversible consequences</li> <li>High cost of being wrong</li> <li>Affects many stakeholders</li> <li>Legal/compliance implications</li> <li>Core architecture changes</li> </ul>"},{"location":"processes/decisions/#documenting-decisions","title":"Documenting Decisions","text":""},{"location":"processes/decisions/#decision-log","title":"Decision Log","text":"<p>Keep a central log of all decisions:</p> <pre><code># Q1 2024 Decisions\n\n| Date | Decision | Type | Driver | Link |\n|------|----------|------|--------|------|\n| 2024-01-15 | Adopt TypeScript | Type 1 | @sarah | [RFC](link) |\n| 2024-01-22 | Change standup time | Type 3 | @team | [Thread](link) |\n| 2024-02-01 | New monitoring tool | Type 2 | @ops | [Doc](link) |\n</code></pre>"},{"location":"processes/decisions/#architecture-decision-records-adrs","title":"Architecture Decision Records (ADRs)","text":"<p>For technical decisions:</p> <pre><code># ADR-001: Use PostgreSQL for main database\n\n## Status\nAccepted\n\n## Context\nWe need to choose a primary database\n\n## Decision\nWe will use PostgreSQL 14+\n\n## Consequences\n- Need to train team on PostgreSQL\n- Must plan migration from MySQL\n- Better JSON support for our use case\n</code></pre>"},{"location":"processes/decisions/#revisiting-decisions","title":"Revisiting Decisions","text":""},{"location":"processes/decisions/#when-to-revisit","title":"When to Revisit","text":"<ul> <li>New information available</li> <li>Context has changed</li> <li>Decision isn't working</li> <li>Scheduled review time</li> </ul>"},{"location":"processes/decisions/#how-to-revisit","title":"How to Revisit","text":"<ol> <li>Document what's changed</li> <li>Assess impact of changing</li> <li>Follow appropriate process</li> <li>Update documentation</li> </ol>"},{"location":"processes/decisions/#anti-patterns-to-avoid","title":"Anti-patterns to Avoid","text":""},{"location":"processes/decisions/#analysis-paralysis","title":"\u274c Analysis Paralysis","text":"<p>Endless research without deciding</p> <p>Fix: Set a deadline</p>"},{"location":"processes/decisions/#decision-by-committee","title":"\u274c Decision by Committee","text":"<p>Everyone must agree on everything</p> <p>Fix: Clear decision rights</p>"},{"location":"processes/decisions/#shadow-decisions","title":"\u274c Shadow Decisions","text":"<p>Decisions made without transparency</p> <p>Fix: Document all decisions</p>"},{"location":"processes/decisions/#revisiting-constantly","title":"\u274c Revisiting Constantly","text":"<p>Questioning every decision</p> <p>Fix: Commit period before revisiting</p>"},{"location":"processes/decisions/#no-owner","title":"\u274c No Owner","text":"<p>Nobody accountable for decision</p> <p>Fix: Always assign a driver</p>"},{"location":"processes/decisions/#decision-escalation","title":"Decision Escalation","text":"<p>When to escalate:</p> <ol> <li>Deadlocked - Team can't agree</li> <li>Out of scope - Beyond team authority</li> <li>High risk - Major consequences</li> <li>Cross-functional - Affects multiple teams</li> </ol> <p>How to escalate:</p> <pre><code>## Escalation Request\n\n**Decision needed**: [What]\n**Stuck because**: [Why escalating]\n**Options**: [What are the choices]\n**Recommendation**: [Your view]\n**Needed by**: [Date]\n**Impact of delay**: [Consequences]\n</code></pre>"},{"location":"processes/decisions/#tools-templates","title":"Tools &amp; Templates","text":"<ul> <li>RFCs: RFC template</li> <li>ADRs: ADR template</li> <li>Decision matrix: Template</li> <li>DACI template: Template</li> </ul>"},{"location":"processes/decisions/#examples-of-good-decisions","title":"Examples of Good Decisions","text":""},{"location":"processes/decisions/#example-1-technology-choice","title":"Example 1: Technology Choice","text":"<p>\"We'll use React for our frontend because: - Team has expertise - Large ecosystem - Good performance for our needs - Decision by: Engineering team - Revisit in: 1 year\"</p>"},{"location":"processes/decisions/#example-2-process-change","title":"Example 2: Process Change","text":"<p>\"Moving standup to async because: - Team is distributed - Saves 2.5 hours/week - Trial for 1 month - Decision by: Team consent\"</p>"},{"location":"processes/decisions/#remember","title":"Remember","text":"<p>\"A good decision now is better than a perfect decision later.\"</p> <p>Most decisions are reversible. When in doubt, try something and learn! \ud83d\ude80</p>"},{"location":"processes/meetings/","title":"Meeting Guidelines","text":"<p>Meetings should be productive, not painful. Here's how we run effective meetings.</p>"},{"location":"processes/meetings/#meeting-principles","title":"Meeting Principles","text":"<ol> <li>Meetings are expensive - Respect everyone's time</li> <li>Async first - Could this be a document?</li> <li>Agenda required - No agenda, no meeting</li> <li>Outcomes focused - Every meeting needs a clear outcome</li> <li>Document decisions - If it's not written, it didn't happen</li> </ol>"},{"location":"processes/meetings/#before-the-meeting","title":"Before the Meeting","text":""},{"location":"processes/meetings/#do-we-need-this-meeting","title":"Do We Need This Meeting?","text":"<p>Ask yourself: - Could this be an email/Slack message? - Could this be a document with comments? - Is everyone necessary? - Is the timing right?</p>"},{"location":"processes/meetings/#meeting-checklist","title":"Meeting Checklist","text":"<ul> <li> Clear objective - What are we trying to achieve?</li> <li> Right people - Who absolutely needs to be there?</li> <li> Agenda shared - At least 24 hours before</li> <li> Pre-read sent - Share context beforehand</li> <li> Time appropriate - Consider time zones</li> <li> Duration set - Default to 25 or 50 minutes</li> </ul>"},{"location":"processes/meetings/#meeting-types-templates","title":"Meeting Types &amp; Templates","text":""},{"location":"processes/meetings/#1-daily-standup-15-min","title":"1. Daily Standup (15 min)","text":"<p>Format: Round-robin Frequency: Daily Attendees: Team</p> <pre><code>Each person shares:\n1. What I did yesterday\n2. What I'm doing today\n3. Any blockers\n\nNo problem-solving during standup!\n</code></pre>"},{"location":"processes/meetings/#2-weekly-team-sync-45-min","title":"2. Weekly Team Sync (45 min)","text":"<p>Format: Structured agenda Frequency: Weekly Attendees: Department/Team</p> <pre><code>Agenda:\n- Wins from last week (5 min)\n- Metrics review (10 min)\n- Priority updates (15 min)\n- Blockers &amp; help needed (10 min)\n- Announcements (5 min)\n</code></pre>"},{"location":"processes/meetings/#3-11-meeting-30-min","title":"3. 1:1 Meeting (30 min)","text":"<p>Format: Conversation Frequency: Weekly/Bi-weekly Attendees: Manager + Report</p> <pre><code>Topics:\n- How are you doing?\n- Progress on goals\n- Challenges/blockers\n- Feedback both ways\n- Career development\n- Action items\n</code></pre>"},{"location":"processes/meetings/#4-project-kickoff-60-min","title":"4. Project Kickoff (60 min)","text":"<p>Format: Presentation + Discussion Frequency: Per project Attendees: Stakeholders</p> <pre><code>Agenda:\n1. Project overview &amp; goals (10 min)\n2. Scope &amp; requirements (15 min)\n3. Timeline &amp; milestones (10 min)\n4. Roles &amp; responsibilities (10 min)\n5. Risks &amp; mitigation (10 min)\n6. Q&amp;A (10 min)\n7. Next steps (5 min)\n</code></pre>"},{"location":"processes/meetings/#5-retrospective-60-min","title":"5. Retrospective (60 min)","text":"<p>Format: Facilitated discussion Frequency: End of sprint/project Attendees: Team</p> <pre><code>Structure:\n1. Set the stage (5 min)\n2. Gather data - What happened? (15 min)\n3. Generate insights - Why? (15 min)\n4. Decide actions - What now? (20 min)\n5. Close - Appreciation (5 min)\n</code></pre>"},{"location":"processes/meetings/#6-decision-meeting-30-60-min","title":"6. Decision Meeting (30-60 min)","text":"<p>Format: Structured decision-making Frequency: As needed Attendees: Decision makers + experts</p> <pre><code>Process:\n1. Context &amp; problem (10 min)\n2. Options presented (15 min)\n3. Discussion &amp; questions (20 min)\n4. Decision or next steps (10 min)\n5. Document outcome (5 min)\n</code></pre>"},{"location":"processes/meetings/#during-the-meeting","title":"During the Meeting","text":""},{"location":"processes/meetings/#meeting-roles","title":"Meeting Roles","text":"<p>Facilitator (Required) - Keeps meeting on track - Manages time - Ensures everyone participates</p> <p>Note-taker (Required) - Documents decisions - Captures action items - Shares notes after</p> <p>Timekeeper (Optional) - Watches the clock - Gives time warnings - Keeps agenda moving</p>"},{"location":"processes/meetings/#meeting-etiquette","title":"Meeting Etiquette","text":""},{"location":"processes/meetings/#dos","title":"Do's \u2705","text":"<ul> <li>Start on time</li> <li>Follow the agenda</li> <li>One conversation at a time</li> <li>Respect different opinions</li> <li>Stay present (close other tabs)</li> <li>Speak up if confused</li> <li>End on time</li> </ul>"},{"location":"processes/meetings/#donts","title":"Don'ts \u274c","text":"<ul> <li>No sidebar conversations</li> <li>No multitasking</li> <li>No dominating discussion</li> <li>No personal attacks</li> <li>No meeting hijacking</li> <li>No going over time</li> </ul>"},{"location":"processes/meetings/#virtual-meeting-tips","title":"Virtual Meeting Tips","text":"<ul> <li>Camera on for engagement (when possible)</li> <li>Mute when not speaking</li> <li>Raise hand feature for questions</li> <li>Chat for links and side notes</li> <li>Record for those absent</li> <li>Screen share for clarity</li> </ul>"},{"location":"processes/meetings/#after-the-meeting","title":"After the Meeting","text":""},{"location":"processes/meetings/#within-24-hours","title":"Within 24 Hours","text":"<ol> <li>Send notes to all participants</li> <li>Document decisions in appropriate place</li> <li>Create tickets for action items</li> <li>Schedule follow-ups if needed</li> <li>Cancel recurring if no longer needed</li> </ol>"},{"location":"processes/meetings/#meeting-notes-template","title":"Meeting Notes Template","text":"<pre><code># Meeting: [Title]\nDate: YYYY-MM-DD\nAttendees: @name1, @name2\nFacilitator: @name\nNotes: @name\n\n## Objective\nWhat we aimed to achieve\n\n## Key Discussion Points\n- Point 1\n- Point 2\n\n## Decisions Made\n- Decision 1: [what was decided]\n- Decision 2: [what was decided]\n\n## Action Items\n- [ ] Action 1 - @owner - Due: date\n- [ ] Action 2 - @owner - Due: date\n\n## Follow-up Required\n- Next meeting scheduled for: date\n</code></pre>"},{"location":"processes/meetings/#meeting-hygiene","title":"Meeting Hygiene","text":""},{"location":"processes/meetings/#calendar-management","title":"Calendar Management","text":"<ul> <li>Block focus time</li> <li>Add buffer between meetings</li> <li>Set working hours</li> <li>Decline unnecessary meetings</li> <li>Propose async alternatives</li> </ul>"},{"location":"processes/meetings/#recurring-meeting-audit","title":"Recurring Meeting Audit","text":"<p>Every quarter, review recurring meetings: - Is this still needed? - Right frequency? - Right duration? - Right attendees?</p>"},{"location":"processes/meetings/#meeting-free-times","title":"Meeting-Free Times","text":""},{"location":"processes/meetings/#no-meeting-zones","title":"No Meeting Zones","text":"<ul> <li>Wednesday afternoons - Deep work</li> <li>Friday afternoons - Wrap up week</li> <li>Lunch hours - Personal time</li> </ul>"},{"location":"processes/meetings/#focus-blocks","title":"Focus Blocks","text":"<ul> <li>Minimum 2-hour blocks</li> <li>Mark as \"Focus Time\" in calendar</li> <li>Slack status to \"Do Not Disturb\"</li> </ul>"},{"location":"processes/meetings/#special-situations","title":"Special Situations","text":""},{"location":"processes/meetings/#all-hands-meeting","title":"All-Hands Meeting","text":"<ul> <li>Monthly or quarterly</li> <li>Record for async viewing</li> <li>Q&amp;A segment</li> <li>Clear agenda sent ahead</li> </ul>"},{"location":"processes/meetings/#emergency-meetings","title":"Emergency Meetings","text":"<ul> <li>Rare and truly urgent</li> <li>5-minute Slack warning</li> <li>Brief and focused</li> <li>Follow up with documentation</li> </ul>"},{"location":"processes/meetings/#brainstorming-sessions","title":"Brainstorming Sessions","text":"<ul> <li>Divergent thinking first</li> <li>No criticism during ideation</li> <li>Time-boxed activities</li> <li>Document all ideas</li> <li>Converge at the end</li> </ul>"},{"location":"processes/meetings/#tools-we-use","title":"Tools We Use","text":"Purpose Tool Video Calls Zoom/Google Meet Scheduling Calendly/Google Calendar Notes Notion/Google Docs Whiteboard Miro/FigJam Async Video Loom Polls Slido/Poll Everywhere"},{"location":"processes/meetings/#meeting-metrics","title":"Meeting Metrics","text":"<p>Track and improve: - Average meeting duration - Number of meetings per week - Meeting satisfaction scores - Action item completion rate - On-time start rate</p>"},{"location":"processes/meetings/#faq","title":"FAQ","text":"<p>Q: Can I decline a meeting? A: Yes! Propose async alternative or send someone else.</p> <p>Q: What if we run out of time? A: Stop at scheduled time. Schedule follow-up if needed.</p> <p>Q: No agenda provided? A: Ask for one or decline the meeting.</p> <p>Q: Too many people invited? A: Suggest a smaller group with notes shared after.</p>"},{"location":"processes/meetings/#remember","title":"Remember","text":"<p>\"The best meeting is the one that doesn't need to happen.\"</p> <p>When in doubt, default to async. Your future self will thank you! \ud83d\ude4f</p>"}]}